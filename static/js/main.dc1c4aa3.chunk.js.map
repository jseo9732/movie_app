{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","length","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAmCeA,MA/Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAMH,EAASI,IAAMN,EAAQA,MAAQA,IAC1C,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA8BJ,IAC9B,oBAAII,UAAU,aAAd,SAA6BL,IAC7B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,eAA1B,SACKI,GADIC,QAKjB,mBAAGL,UAAU,gBAAb,SACMH,EAAQS,OAAS,IAAMT,EAAQU,MAAM,EAAG,KAAO,MAAQV,WCgC9DW,G,kNA5CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IAAI,yEAD7C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,uDAKZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASX,UAAU,YAAnB,SACIU,EACA,qBAAKV,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGW,EAAOR,KAAI,SAAAgB,GACV,OACE,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GA5BV2B,IAAMC,YCEVC,MARf,WACI,OACI,uCCWOC,MATf,WACI,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWnB,IACxC,cAAC,IAAD,CAAOiB,KAAK,SAASE,UAAWJ,QCI7BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dc1c4aa3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\"\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={ poster } alt={ title } title={ title } />\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{ title }</h3>\r\n                <h5 className=\"movie_year\">{ year }</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres_genre\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">\r\n                    { summary.length > 180 ? summary.slice(0, 180) + \"...\" : summary }\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    poster: propTypes.string.isRequired,\r\n    genres: propTypes.arrayOf(propTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  \r\n  getMovies = async () => {\r\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoading: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => {\r\n              return (\r\n                <Movie \r\n                  key={movie.id}\r\n                  id={movie.id} \r\n                  year={movie.year} \r\n                  title={movie.title} \r\n                  summary={movie.summary} \r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","function  About() {\r\n    return (\r\n        <span>\r\n            hi\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default About;","import { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport About from \"./routes/About\";\r\n\r\nfunction  App() {\r\n    return (\r\n        <HashRouter>\r\n            <Route path=\"/\" exact={true} component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}